name: E2E environment
description: Sets up test environment for E2E tests.
inputs:
  version:
    description: The version of WordPress to install.
  gutenberg:
    description: The version of the Gutenberg plugin to install.
  amp:
    description: The version of the AMP plugin to install.
runs:
  using: composite
  steps:
    - shell: bash
      run: |
        mkdir /tmp/wp

        echo "::group::Start MySQL service"
        sudo systemctl start mysql.service
        echo "::endgroup::"

        echo "::group::Install WP-CLI"
        composer global require \
          wp-cli/wp-cli \
          wp-cli/core-command \
          wp-cli/config-command \
          wp-cli/server-command \
          wp-cli/rewrite-command \
          wp-cli/entity-command \
          wp-cli/extension-command \
          wp-cli/db-command
        echo "::endgroup::"
    - shell: bash
      working-directory: /tmp/wp
      run: |
        export PATH="$(composer config -g home)/vendor/bin:$PATH"
        echo "::group::Downloading WordPress"
        wp core download --version=${{ inputs.version }} --force
        echo "::endgroup::"

        echo "::group::Creating a new config file"
        wp config create --dbname=wordpress_test --dbuser=root --dbpass=root
        echo "::endgroup::"

        echo "::group::Creating the database"
        wp db create
        echo "::endgroup::"

        echo "::group::Installing the site"
        wp core install --title="SiteKit" --admin_user=admin --admin_password=password --admin_email=test@test.com --skip-email --url=http://localhost:9002
        echo "::endgroup::"
    - shell: bash
      run: |
        rm -rf /tmp/wp/wp-content/mu-plugins /tmp/wp/wp-content/plugins

        echo "::group::Copy must-use plugins"
        cp -r --force tests/e2e/mu-plugins /tmp/wp/wp-content/mu-plugins
        echo "::endgroup::"

        echo "::group::Copy e2e plugins"
        cp -r --force tests/e2e/plugins /tmp/wp/wp-content/plugins
        echo "::endgroup::"

        echo "::group::Copy site-kit plugin"
        cp -r --force $PWD /tmp/wp/wp-content/plugins/google-site-kit
        echo "::endgroup::"
    - shell: bash
      working-directory: /tmp/wp
      run: |
        export PATH="$(composer config -g home)/vendor/bin:$PATH"

        echo "::group::Creating users"
        wp user create admin-2 admin-2@example.com --role=administrator --user_pass=password --quiet
        wp user create editor editor@example.com --role=editor --user_pass=password --quiet
        wp user create author author@example.com --role=author --user_pass=password --quiet
        wp user create contributor contributor@example.com --role=contributor --user_pass=password --quiet
        echo "::endgroup::"

        echo "::group::Creating posts"
        wp post create --post_status=publish --post_title="Hello Solar System!" --quiet
        wp post create --post_status=publish --post_title="Hello Milky Way!" --quiet
        wp post create --post_status=publish --post_title="Hello Universe!" --quiet
        wp post create --post_status=publish --post_title="Hello Spéçïåł čhāràćtęrß!" --quiet
        echo "::endgroup::"

        if [ ! -z "${{ inputs.gutenberg }}" ]; then
          echo "::group::Installing Gutenberg ${{ inputs.gutenberg }}"
          wp plugin install gutenberg --version=${{ inputs.gutenberg }} --activate --force
          echo "::endgroup::"
        fi

        if [ ! -z "${{ inputs.amp }}" ]; then
          echo "::group::Installing AMP ${{ inputs.amp }}"
          wp plugin install amp --force --version=${{ inputs.amp }}
          echo "::endgroup::"
        fi

        echo "::group::Activating site-kit"
        wp plugin activate google-site-kit
        echo "::endgroup::"

        echo "::group::Updating rewrite rules structure"
        wp rewrite structure '%postname%' --hard
        echo "::endgroup::"

        wp server --host=0.0.0.0 --port=9002 > /tmp/wp-server.log &
