name: build-pr

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  build-pr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - name: Composer Install
      uses: php-actions/composer@v1
      with:
        args: install
    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm
    - name: Setup Node.js (.nvmrc)
      uses: actions/setup-node@v1
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    - name: Cache Node - npm
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-cache-
    - name: npm install
      run: |
        npm install
    - name: Build develop version
      run: |
        ZIP=`npm run release-zip | grep Creating | cut -c10-`
        mv "$ZIP" google-site-kit-dev.zip
    - name: Build release version
      run: |
        npm run build
        ZIP=`npm run dev-zip | grep Creating | cut -c10-`
        mv "$ZIP" google-site-kit.zip
    - name: Deploy build files to wiki
      run: |
        mkdir -p ${{ github.ref }}
        mv google-site-kit.zip ${{ github.ref }}
        mv google-site-kit-dev.zip ${{ github.ref }}
        bash .github/release-to-wiki.sh
      env:
        GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
        GIT_REF: ${{ github.ref }}
