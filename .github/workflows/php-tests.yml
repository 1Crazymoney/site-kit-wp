name: PHP Tests

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  php-tests:
    name: Run PHP Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['5.6', '7.4']
        wordpress: ['4.7', 'latest-stable', 'latest-stable (multisite)', 'nightly']
    if: github.event.pull_request.draft == false
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: wordpress
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          extensions: mbstring, intl, redis, pdo_mysql
          php-version: ${{ matrix.php }}
      - name: Start MySQL
        run: sudo service mysql start
      - name: Enable multisite
        if: ${{ matrix.wordpress == 'latest-stable-multisite' }}
        run: |
          echo "WP_MULTISITE=1" >> $GITHUB_ENV
      - name: Extract version from stable WordPress
        if: ${{ matrix.wordpress == 'latest-stable' || matrix.wordpress == 'latest-stable-multisite' }}
        run: |
          curl -s http://api.wordpress.org/core/version-check/1.7/ > /tmp/wp-latest.json
          echo "WP_VERSION=$(grep -o '"version":"[^"]*' /tmp/wp-latest.json | sed 's/"version":"//')" >> $GITHUB_ENV
        env:
          WP_VERSION: ${{ matrix.wordpress }}
      - name: Set WordPress version
        if: ${{ !(matrix.wordpress == 'latest-stable' || matrix.wordpress == 'latest-stable (multisite)' || matrix.wordpress == 'nightly') }}
        run: echo "WP_VERSION=$WP_VERSION" >> $GITHUB_ENV
        env:
          WP_VERSION: ${{ matrix.wordpress }}
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Composer Install
        if: ${{ !((matrix.wordpress == 'latest-stable' || matrix.wordpress == 'latest-stable (multisite)' || matrix.wordpress == 'nightly') && matrix.php == '5.6') }}
        run: docker run --rm -v "$PWD:/app" -v "${{ steps.composer-cache.outputs.dir }}:/tmp/cache" composer install --no-interaction --no-progress
      - name: Set up PHP test data
        if: ${{ !((matrix.wordpress == 'latest-stable' || matrix.wordpress == 'latest-stable (multisite)' || matrix.wordpress == 'nightly') && matrix.php == '5.6') }}
        run: tests/bin/install-wp-tests.sh wordpress_test root root 127.0.0.1 $WP_VERSION
      - name: Run Unit Tests
        if: ${{ !((matrix.wordpress == 'latest-stable' || matrix.wordpress == 'latest-stable (multisite)' || matrix.wordpress == 'nightly') && matrix.php == '5.6') }}
        run: composer test
